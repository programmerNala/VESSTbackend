/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Embed as PrismaEmbed } from "@prisma/client";

export class EmbedServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.EmbedCountArgs, "select">): Promise<number> {
    return this.prisma.embed.count(args);
  }

  async embeds(args: Prisma.EmbedFindManyArgs): Promise<PrismaEmbed[]> {
    return this.prisma.embed.findMany(args);
  }
  async embed(args: Prisma.EmbedFindUniqueArgs): Promise<PrismaEmbed | null> {
    return this.prisma.embed.findUnique(args);
  }
  async createEmbed(args: Prisma.EmbedCreateArgs): Promise<PrismaEmbed> {
    return this.prisma.embed.create(args);
  }
  async updateEmbed(args: Prisma.EmbedUpdateArgs): Promise<PrismaEmbed> {
    return this.prisma.embed.update(args);
  }
  async deleteEmbed(args: Prisma.EmbedDeleteArgs): Promise<PrismaEmbed> {
    return this.prisma.embed.delete(args);
  }
}
