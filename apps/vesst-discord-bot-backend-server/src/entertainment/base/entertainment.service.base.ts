/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Entertainment as PrismaEntertainment } from "@prisma/client";

export class EntertainmentServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.EntertainmentCountArgs, "select">
  ): Promise<number> {
    return this.prisma.entertainment.count(args);
  }

  async entertainments(
    args: Prisma.EntertainmentFindManyArgs
  ): Promise<PrismaEntertainment[]> {
    return this.prisma.entertainment.findMany(args);
  }
  async entertainment(
    args: Prisma.EntertainmentFindUniqueArgs
  ): Promise<PrismaEntertainment | null> {
    return this.prisma.entertainment.findUnique(args);
  }
  async createEntertainment(
    args: Prisma.EntertainmentCreateArgs
  ): Promise<PrismaEntertainment> {
    return this.prisma.entertainment.create(args);
  }
  async updateEntertainment(
    args: Prisma.EntertainmentUpdateArgs
  ): Promise<PrismaEntertainment> {
    return this.prisma.entertainment.update(args);
  }
  async deleteEntertainment(
    args: Prisma.EntertainmentDeleteArgs
  ): Promise<PrismaEntertainment> {
    return this.prisma.entertainment.delete(args);
  }
}
